


def matrix2d():
    A = Matrix(
        [
            [1,     2,      333],
            [1,     11,     3],
            [7,     7,      7]
        ]
    )
    #print(A[1, 2])  # 2

    B = Matrix(
        [
            [1,     2],
            [3,     4]
        ]
    )

    C = Matrix(
        [
            [1,     2,      333],
            [1,     11,     3],
            [7,     7,      7]
        ]
    )

    print(C)

    print(A != B)

    print(Matrix.identity_matrix(3))

    print(Matrix.zero_matrix(2, 4))

    trans = Matrix(
        [
            [1, 2, 3],
            [4, 5, 6]
        ]
    )

    print("===")
    print(trans)
    print("===")
    print(trans.transposition())
    print("===")

    G = Matrix(
        [
            [7,     3,      2,      7],
            [0,     1,      0,      2],
            [0,     0,      2,      3],
            [0,     0,      0,      2],
        ]
    )

    print(G.get_info())

    calc1 = Matrix(
        [
            [ 1,     2],
            [-3,    -4],
            [ 5,     6],
        ]
    )

    calc2 = Matrix(
        [
            [ 1,     1 ],
            [ 10,   -10],
            [ 0,     5 ],
        ]
    )

    print(calc1 + calc2)
    print("======")
    print(2 * A)

    mult1 = Matrix(
        [
            [1,     2],
            [3,     4]
        ]
    )
    mult2 = Matrix(
        [
            [5,     6],
            [7,     8]
        ]
    )

    print("===")
    print(mult1 * mult2)

    mult1 = Matrix(
        [
            [1,     2,      3],
            [4,     5,      6]
        ]
    )
    mult2 = Matrix(
        [
            [-1,     3,    -3,     1 ],
            [ 2,     0,     0,     5 ],
            [ 1,     5,     7,    -10]
        ]
    )

    print("===")
    print(mult1 * mult2)

    det = Matrix(
        [
            [8,     12,     3 ],
            [7,     6,      5 ],
            [7,     2,      10]
        ]
    )

    print("===")
    print(det.determinant())

    inv = Matrix(
        [
            [1, -1],
            [0, 2]
        ]
    )

    print("===*")
    print(inv.inverse() * inv == Matrix.identity_matrix(2))
    print("===")
    print(det.inverse())

    mat = Matrix(
        [[0]]
    )

def matrix3d():
    M = Matrix3D([
        [[1, 2], [3, 4]],
        [[5, 6], [7, 8]]
    ])

    assert M.determinant_3d() == - 4

    M = Matrix3D([
        [[1, 1], [1, 1]],
        [[1, 1], [1, 1]]
    ])

    assert M.determinant_3d() == 0

    M = Matrix3D([
        [[10, 30], [10, 60]],
        [[50, 60], [0, 70]]
    ])

    assert M.determinant_3d() == 3100

    M = Matrix3D([
        [[1, 2, 3], [4, 5, 6], [7, 8, 9]],
        [[10, 11, 12], [420, 69, 15], [16, 17, 18]],
        [[1, 2, 3], [4, 5, 6], [25, 26, 27]]
    ])

    assert M.determinant_3d() == -8910

    M = Matrix3D([
        [[10000000, 2, 20], [4, 30, 6], [7, 40, 500]],
        [[10, 11, 12], [420, 69, 15], [16, 17, 18]],
        [[1, 2, 3], [4, 5, 6], [25, 26, 27]]
    ])

    assert M.determinant_3d() == -14609825901

    M = Matrix3D([
        [[1, 2, 20], [4, 30, 6], [7, 40, 500]],
        [[10, 11, 12], [420, 69, 15], [16, 17, 18]],
        [[1, 2, 3], [4, 5, 6], [25, 26, 27]]
    ])

    assert M.determinant_3d() == 172638

    M = Matrix3D([
        [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],
        [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],
        [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],
        [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]]
    ])

    assert M.determinant_3d() == 0

    M = Matrix3D([
        [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],
        [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],
        [[1, 1, 1, 1], [1, 300, 300, 1], [1, 400, 1, 1], [1, 1, 1, 1]],
        [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]]
    ])

    assert M.determinant_3d() == 0

    M = Matrix3D([
        [[10, 20, 30, 40], [50, 60, 70, 80], [90, 100, 110, 120], [130, 140, 150, 160]],
        [[170, 180, 190, 200], [210, 220, 230, 240], [250, 260, 270, 280], [290, 300, 310, 320]],
        [[330, 340, 350, 360], [370, 380, 390, 400], [410, 420, 430, 440], [450, 460, 470, 480]],
        [[490, 500, 510, 520], [530, 540, 550, 560], [570, 580, 590, 600], [610, 620, 630, 640]]
    ])

    assert M.determinant_3d() == 0

    M = Matrix3D([
        [[10, 20, 30, 40], [50, 60, 70, 80], [90, 100, 110, 1274580], [130, 140, 150, 160]],
        [[170, 10148580, 190, 200], [210, 220, 230, 701000], [250, 260, 270, 280], [290, 300, 310, 320]],
        [[330, 340, 350, 360], [370, 380, 390, 400], [410, 420, 430, 4444440], [450, 460, 470, 480]],
        [[490, 500, 510, 548964], [530, 540, 550, 560], [570, 580, 590, 600], [610, 620, 630, 640]]
    ])
    assert M.determinant_3d() == -185706302284800000

    M = Matrix3D([
        [[1, 1, 1, 1], [1, 1, 1, 4987], [1, 1, 1, 1], [1, 1, 1, 1]],
        [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [156, 1, 1, 1]],
        [[1, 1, 1, 1], [1, 300, 300, 1], [1, 400, 1, 1], [1, 1, 1, 1]],
        [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]]
    ])
    assert M.determinant_3d() == -308359170

if __name__ == '__main__':
    matrix2d()
    matrix3d()